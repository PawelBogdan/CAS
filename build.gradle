task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: "com.github.kt3k.coveralls"

group = 'pl.jagiellonian'
version = '0.1'
description = """"""

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3"
    }
}

repositories {
    mavenCentral()
}

task hello << { task -> println "Hello, I'm $task.project.name" }

dependencies {
    compile 'com.google.guava:guava:r05'

    // Logging
    testCompile "org.slf4j:slf4j-api:1.7.7"
    testCompile "ch.qos.logback:logback-classic:1.1.2"
    testCompile "ch.qos.logback:logback-core:1.1.2"

    // JUnit
    testCompile "junit:junit:4.12"

    // Mockito and its dependencies
    testCompile "org.mockito:mockito-core:1.10.8"
    testCompile "org.hamcrest:hamcrest-core:1.3"
    testCompile "org.hamcrest:hamcrest-library:1.3"
    testCompile "org.objenesis:objenesis:2.1"

    // AssertJ
    testCompile "org.assertj:assertj-core:3.1.0"

    // JUnitParams
    compile group: 'pl.pragmatists', name: 'JUnitParams', version: '1.0.4'

}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
}

jar {
    archiveName "$project.name" + '.jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': 'pl.jagiellonian.Source'
    }
}

jacoco {
    toolVersion = "0.7.6.201602180812"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

